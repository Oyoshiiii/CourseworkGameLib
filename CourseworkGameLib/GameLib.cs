namespace CourseworkGameLib
{
    public class Character 
    {
        protected string name;
        public string Name { get { return name; } set { name = value; } }
        public List<string> Coctails;
        public List<string> Recipies;
        protected List<string> storyLines;
        protected int coctailNum;
        public int CoctailNum { get { return coctailNum; } set { coctailNum = value; } }
        public Character()
        {
            Name = "-";
            Coctails = new List<string>();
            Recipies = new List<string>();
            storyLines = new List<string>();
            CoctailNum = 0;
        }
        public virtual string StoryLines(int line) { return "-"; }
    }

    public class Lilith : Character
    {
        public override string StoryLines(int line)
        {
            return storyLines[line];
        }
        int coctailGiftNum;
        public int CoctailGiftNum { get { return coctailGiftNum; }  set { coctailGiftNum = value; } }
        public Lilith() 
        { 
            Name = "Lilith";
            CoctailNum = 0;
            CoctailGiftNum = 1;
            Coctails = new List<string> { "Розы в снегу", "Белая дымка" };
            Recipies = new List<string> 
            { 
                "Мята, лед, сироп из роз и клюквы, мусс из белого шоколада", 
                "Сухой лед, лавандовый сироп" 
            };

            storyLines = new List<string>
            {
                //приветствие
                "\tПривет-привет, думаю, мне сегодня как обычно!",

                //Ответ 1 на -> А как обычно - это как?..
                "\tА да точно.. ты же новенькая, в таком случае хорошо. Если готова принять заказ, то записывай",

                //Ответ 2 на -> Конечно, как обычно, каждый день такое готовлю
                "\tТы забавная. Прошу простить, я уже по привычке.. приятно видеть новые лица здесь",

                //Заказ коктейля (описание 1)
                "\tСтыдно признаться, но я настолько привыкла к тому, что прошлая барменша без каких-либо вопросов " +
                "делала этот коктейль... что я уже и вовсе забыла название.. надеюсь, вы на меня не злитесь и не " +
                "примите за глупую, ",

                //Заказ коктейля (описание 1 продолжение)
                //Ответ 1 на -> Конечно нет, все хорошо, я готова буду принять ваш заказ и так
                "\tСпасибо большое, в таком случае.. с чего бы начать.. помню, что я ощущала себя одновременно и на " +
                "цветочном поле, и в заснеженном лесу.. и так прохладно и свежо...",

                //Заказ коктейля (описание 1 продолжение)
                //Ответ 2 на -> Ну, смешно однако...
                "\tНу спасибо блин.. в любом случае.. хм, с чего бы начать.. помню, что я ощущала себя одновременно и на " +
                "цветочном поле, и в заснеженном лесу.. и так прохладно и свежо...",

                //Уточнение деталей (описание 2) минус рецепт
                //Ответ на -> Простите, но я не особо понимаю.. может вы еще вспомните пару деталей коктейля?
                "\tХорошо, мм.. вроде он бы коктейль был алого красивого цвета.. о, и поверх была мягкая сладкая пена" +
                " или крем, что-то такое вот..",

                //Уточнение деталей (описание 3) минус рецепт и минус подсказка
                //Ответ на -> ...может.. ещё детали вспомните?...
                "\tТяжело без Марты и Сильвы.. надеюсь, они вернутся скоро.. Дай еще чуть времени подумать.. помню, я " +
                "пару раз шутила, что пена эта больше напоминала морскую, чем снег, коим она и должна по задумке являться.. вроде",

                //Принятие заказа
                "\tВеликолепно, это именно то, что я хотела!",

                //Если не было уточнений -> рецепт 
                //1 - благодарность за заказ
                "\tВы очень талантливы.. я вам всего ничего сказала, а вы поняли сразу, что это на напиток, хотя работаете тут " +
                "недавно.. Крайне признательна вам и буду рада вас видеть снова!",

                //Если не было уточнений -> рецепт
                //2 - сам рецепт
                "\tЭто вам скромный подарок от меня, только никому",

                //Если было 1 уточнение -> подсказка
                //1 - благодарность за заказ
                "\tОчень и очень неплохо, особенно учитывая факт того, что вы здесь работаете всего пару дней.. а может и вовсе первый." +
                " Благодарю, что с терпением отнеслись к моей забывчивости",

                //Если было 1 уточнение -> подсказка
                //2 - сама подсказка
                "\tЗнаете, а ведь я способна отчасти предсказывать некоторые события.. правда, из-за упадка сил в последнее время, " +
                "выходит у меня это редко.. но сейчас что-то мне подсказывает, что скоро вас посетит мужчина в не самом лучшем " +
                "настроении.. и что вы думаете, насчет табака?",

                //Если было 2 уточнения -> персонаж встает и уходит (╯︵╰,) (с заказом)
                "\tНу наконец, это было тяжело, но вы справились.. но я уверена, что вы еще сможете быстро накопить опыт, " +
                "у вас все получится!",

                //Отказ от заказа
                "\tМда, честно, я надеялась на лучшее.. ну ладно, в принципе, я сама виновата, что забыла название коктейля.. "
            };
        }
    }

    public class Peter : Character
    {
        public Peter()
        {
            Name = "Peter";
            CoctailNum = 0;
            Coctails = new List<string> { "Табак и ваниль" };
            Recipies = new List<string> { "" };
            /*
             * диалоги:
             * 1. приветствие
             * 2. ответы (1) на приветствие
             * 3. заказ коктейля (описание 1)
             * 4. уточнение деталей (описание 2) \\ персонаж уже недоволен и злой
             * 5. отказ и уход, если заказ неверный
             * 6./7. если заказ сделан верно и без уточнений, то даст совет по выполнению коктейлей
             * 8. если заказ сделан c уточнением, то он просто уходит с заказом
             */
            storyLines = new List<string>
            {
                //1
                "",

                //2
                "",

                //3
                "",

                //4
                "",

                //5
                "",

                //6
                "",

                //7
                "",

                //8
                ""
            };
        }
    }

    public class GameLine
    {
        private static string code;
        public static string Code { get { return code; } set { code = value; } }
        public GameLine(string autosaveCode) { Code = autosaveCode; }
        public static void MainGameLine(string autosaveCode)
        {

        }
    }
}